name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags:
      - v*
  workflow_dispatch: []

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Make Release Folder
        if: success()
        id: make-release-folder
        run: mkdir -p release

      - uses: actions/checkout@v2
        if: success()
        id: checkout
        with:
          path: release

      - name: Copy Config File
        if: success()
        id: copy-config-file
        run: cp release/config.sample.json release/config.json

      - name: Remove .git* files and folders
        if: success()
        id: remove-git-files
        run: rm -Rf release/.github && rm -Rf release/.git && rm release/.gitignore

      - uses: actions/upload-artifact@v2
        if: success()
        id: upload-artifact
        with:
          name: release
          path: release/

      - name: Zip release folder
        if: success()
        id: zip-release-folder
        run: |
          cd release
          zip -r ../release.zip *
          cd ../

      - name: Create Release
        if: success()
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Twitch API Proxy ${{ github.ref }}
          draft: true
          prerelease: false
          body: |
            Description

            ### Features

            ### Changes

            ### Bugs

      - name: Upload Release Asset
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: release.zip
          asset_name: release.zip
          asset_content_type: application/zip